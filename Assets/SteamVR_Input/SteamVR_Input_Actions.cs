// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_language_OpenMenu;
        
        private static SteamVR_Action_Boolean p_language_InteractUI;
        
        private static SteamVR_Action_Boolean p_language_Teleport;
        
        private static SteamVR_Action_Boolean p_language_GrabPinch;
        
        private static SteamVR_Action_Boolean p_language_GrabGrip;
        
        private static SteamVR_Action_Single p_language_Squeeze;
        
        private static SteamVR_Action_Pose p_language_Pose;
        
        private static SteamVR_Action_Skeleton p_language_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_language_SkeletonRightHand;
        
        private static SteamVR_Action_Vector2 p_language_TouchDirection;
        
        private static SteamVR_Action_Boolean p_language_TouchpadTouched;
        
        private static SteamVR_Action_Vibration p_language_Haptic;
        
        public static SteamVR_Action_Boolean language_OpenMenu
        {
            get
            {
                return SteamVR_Actions.p_language_OpenMenu.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean language_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_language_InteractUI.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean language_Teleport
        {
            get
            {
                return SteamVR_Actions.p_language_Teleport.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean language_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_language_GrabPinch.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean language_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_language_GrabGrip.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single language_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_language_Squeeze.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Pose language_Pose
        {
            get
            {
                return SteamVR_Actions.p_language_Pose.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton language_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_language_SkeletonLeftHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton language_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_language_SkeletonRightHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Vector2 language_TouchDirection
        {
            get
            {
                return SteamVR_Actions.p_language_TouchDirection.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean language_TouchpadTouched
        {
            get
            {
                return SteamVR_Actions.p_language_TouchpadTouched.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration language_Haptic
        {
            get
            {
                return SteamVR_Actions.p_language_Haptic.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.language_OpenMenu,
                    SteamVR_Actions.language_InteractUI,
                    SteamVR_Actions.language_Teleport,
                    SteamVR_Actions.language_GrabPinch,
                    SteamVR_Actions.language_GrabGrip,
                    SteamVR_Actions.language_Squeeze,
                    SteamVR_Actions.language_Pose,
                    SteamVR_Actions.language_SkeletonLeftHand,
                    SteamVR_Actions.language_SkeletonRightHand,
                    SteamVR_Actions.language_TouchDirection,
                    SteamVR_Actions.language_TouchpadTouched,
                    SteamVR_Actions.language_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.language_OpenMenu,
                    SteamVR_Actions.language_InteractUI,
                    SteamVR_Actions.language_Teleport,
                    SteamVR_Actions.language_GrabPinch,
                    SteamVR_Actions.language_GrabGrip,
                    SteamVR_Actions.language_Squeeze,
                    SteamVR_Actions.language_Pose,
                    SteamVR_Actions.language_SkeletonLeftHand,
                    SteamVR_Actions.language_SkeletonRightHand,
                    SteamVR_Actions.language_TouchDirection,
                    SteamVR_Actions.language_TouchpadTouched};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.language_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.language_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.language_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.language_OpenMenu,
                    SteamVR_Actions.language_InteractUI,
                    SteamVR_Actions.language_Teleport,
                    SteamVR_Actions.language_GrabPinch,
                    SteamVR_Actions.language_GrabGrip,
                    SteamVR_Actions.language_TouchpadTouched};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    SteamVR_Actions.language_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.language_TouchDirection};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[]
            {
                    SteamVR_Actions.language_SkeletonLeftHand,
                    SteamVR_Actions.language_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.language_OpenMenu,
                    SteamVR_Actions.language_InteractUI,
                    SteamVR_Actions.language_Teleport,
                    SteamVR_Actions.language_GrabPinch,
                    SteamVR_Actions.language_GrabGrip,
                    SteamVR_Actions.language_Squeeze,
                    SteamVR_Actions.language_TouchDirection,
                    SteamVR_Actions.language_TouchpadTouched};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_language_OpenMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/OpenMenu")));
            SteamVR_Actions.p_language_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/InteractUI")));
            SteamVR_Actions.p_language_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/Teleport")));
            SteamVR_Actions.p_language_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/GrabPinch")));
            SteamVR_Actions.p_language_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/GrabGrip")));
            SteamVR_Actions.p_language_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/language/in/Squeeze")));
            SteamVR_Actions.p_language_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/language/in/Pose")));
            SteamVR_Actions.p_language_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/language/in/SkeletonLeftHand")));
            SteamVR_Actions.p_language_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/language/in/SkeletonRightHand")));
            SteamVR_Actions.p_language_TouchDirection = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/language/in/TouchDirection")));
            SteamVR_Actions.p_language_TouchpadTouched = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/language/in/TouchpadTouched")));
            SteamVR_Actions.p_language_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/language/out/Haptic")));
        }
    }
}
